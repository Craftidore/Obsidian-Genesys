{"blocks":[{"type":"inline","id":"e85988ba5b59","properties":[],"hasRule":true,"nested":[{"type":"group","id":"2b683b8b88c9","properties":["name","size","type","subtype","alignment"],"nested":[{"type":"heading","id":"88b988282859","properties":["name"],"conditioned":true},{"type":"subheading","id":"29cb485a6aab","properties":["type","qty"],"conditioned":false,"fallback":"-"},{"type":"property","id":"cb2b1bcbd988","properties":["desc"],"fallback":"-","display":"Description:","conditioned":true}],"conditioned":true},{"type":"image","id":"c8bae969e9bb","properties":["image"]}]},{"type":"table","id":"ea9aa80b883b","properties":["stats"],"headers":["BRW","AGI","INT","CUN","WIL","PRE"],"calculate":false,"fallback":"-","conditioned":true,"hasRule":true},{"type":"property","id":"98caa93b4ae8","properties":[],"fallback":"-","display":"Stats:","callback":"let output = \"\";\nlet stat = \"\";\nlet icons = {\n\t\"soak\": 0x1F4A5,\n\t\"wounds\": 0x1F9E1,\n\t\"strain\": 0x1F4A2,\n\t\"rdef\": 0x1F3F9,\n\t\"mdef\": 0x1f6e1,\n}\nlet names = {\n\"soak\": \"Soak\",\n\"wounds\": \"Wounds\",\n\"strain\": \"Strain\",\n\"rdef\": \"Ranged Def\",\n\"mdef\": \"Melee Def\",\n}\n\nlet statWithIcon = (targetStat) => {\n\tif (targetStat == undefined || targetStat in monster === false) {\n\t\treturn \"\";\n\t}\n\tif (monster.type == \"Minion\" && names[targetStat] == \"Wounds\") {\nstat = monster[targetStat] * monster.qty; }\nelse {\nstat = monster[targetStat]; }\n\tlet icon = icons[targetStat];\n        let name = names[targetStat];\n\treturn `<strong>${name}</strong> ${String.fromCodePoint(icon)} : ${stat}  || `;\n}\noutput += statWithIcon(\"soak\");\noutput += statWithIcon(\"wounds\");\noutput += statWithIcon(\"strain\");\noutput += statWithIcon(\"rdef\");\noutput += statWithIcon(\"mdef\");\nreturn output.trim();","markdown":true,"dice":false,"hasRule":true},{"type":"saves","id":"ead8289b2b59","properties":["talents"],"fallback":"-","display":"Talents","conditioned":true},{"type":"property","id":"ab7afb79f99a","properties":[],"fallback":"-","callback":"let output = \"\";\nlet diceprof = \"#StarWarsProficiency\";\nlet diceability = \"#StarWarsAbility\";\nlet skills = [];\nlet characteristics = [];\nskills.push(monster.astrogation,monster.athletics,monster.brawl, monster.charm,monster.coercion,monster.computers, monster.cool,monster.coordination,monster.cybernetics, monster.deception,monster.discipline, monster.gunnery, monster.coreworlds, monster.education, monster.lore, monster.outerrim, monster.underworld, monster.warfare, monster.xenology, monster.leadership, monster.lightsaber, monster.mechanics, monster.medicine, monster.melee, monster.negotiation, monster.perception, monster.pplanetary, monster.pspace, monster.rheavy, monster.rlight, monster.resilience, monster.skulduggery, monster.stealth, monster.streetwise, monster.survival, monster.vigilance);\ncharacteristics.push (monster.stats[2], monster.stats[0], monster.stats[0], monster.stats[5], monster.stats[4], monster.stats[2], monster.stats[5], monster.stats[1], monster.stats[2], monster.stats[3], monster.stats[4], monster.stats[1], monster.stats[2], monster.stats[2], monster.stats[2], monster.stats[2], monster.stats[2], monster.stats[2], monster.stats[2], monster.stats[5], monster.stats[0], monster.stats[2], monster.stats[2], monster.stats[0], monster.stats[5], monster.stats[3], monster.stats[1], monster.stats[1], monster.stats[1], monster.stats[1], monster.stats[0], monster.stats[3], monster.stats[1], monster.stats[3], monster.stats[3], monster.stats[4]);\nlet labels = [\"Astrogation\",\"Athletics\",\"Brawl\",\"Charm\",\"Coercion\",\"Computers\",\"Cool\",\"Coordination\",\"Cybernetics\",\"Deception\",\"Discipline\",\"Gunnery\", \"Knw: Core Worlds\",\"Knw: Education\",\"Knw: Lore\",\"Knw: Outer Rim\",\"Knw: Underworld\", \"Knw: Warfare\",\"Knw: Xenology\",\"Leadership\",\"Lightsaber\",\"Mechanics\",\"Medicine\",\"Melee\",\"Negotiation\",\"Perception\",\"Piloting: Planetary\",\"Piloting: Space\",\"Ranged: Heavy\",\"Ranged: Light\",\"Resilience\",\"Skulduggery\",\"Stealth\",\"Streetwise\",\"Survival\",\"Vigilance\"]\n\nfor ( let x = 0; x < skills.length; x++) {\n    let stat = skills[x];\n    let label = labels[x];\n    let characteristic = characteristics[x];\n    if (typeof stat !== \"undefined\" && monster.type == \"Minion\") {\n    stat = stat+monster.qty-1;}\n    let ability = Math.max(stat,characteristic)- \n    Math.min(stat,characteristic)\n    let prof = Math.min(stat,characteristic);\n    let dicepool = diceprof.repeat(prof) + diceability.repeat(ability);\n    if (typeof stat !== \"undefined\") {\n    output += `${label}: ${stat} ( ${dicepool} ) `;}\n}\nreturn output.trim();\n","display":"Skills:","markdown":true,"dice":false,"conditioned":false,"hasRule":true},{"type":"traits","id":"c8ca58e88939","properties":["abilities"],"fallback":"-","conditioned":true,"heading":"Abilities","hasRule":true},{"type":"traits","id":"fbdb9a7bf869","properties":["equipment"],"fallback":"-","heading":"Equipment","conditioned":true,"hasRule":true,"markdown":true,"dice":false}],"name":"Genesys / Star Wars RPG"}